{"name":"Rozu-queue","tagline":"Offline processing queue for rozu","body":"# rozu-queue\r\nOffline processing queue for rozu webhook server.\r\n\r\n[![build status](https://secure.travis-ci.org/avoidwork/rozu-queue.svg)](http://travis-ci.org/avoidwork/rozu-queue)\r\n\r\n## Example\r\n```javascript\r\nvar queue = require('rozu-queue')('rozu', 6379, 'localhost');\r\n\r\nfunction repeat () {\r\n\tprocess.nextTick(function () {\r\n\t\tqueue.process(50).then(function (data) {\r\n\t\t\t// do something with `data`\r\n\t\t\trepeat();\r\n\t\t}, function (e) {\r\n\t\t\tconsole.error(e.stack);\r\n\t\t\trepeat();\r\n\t\t});\r\n\t});\r\n}\r\n\r\nrepeat();\r\n```\r\n\r\n## API\r\n### constructor(channel, port, host)\r\nTakes the redis channel, port & host as parameters, and creates an in RAM queue which can be batched processed with\r\ndelays, as well as an easy drain.\r\n\r\n### process(n = 1, delay = 0)\r\nReturns a Promise of the data to be processed.\r\n\r\n### drain(fn)\r\nDrains the queue and executes an optional Function against the items if provided.\r\n\r\n## License\r\nCopyright (c) 2015 Jason Mulligan\r\nAll Rights Reserved\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}